1. In the Repository that extend from the ReactiveMongoRepository 

@Repository
//Optional @Repository we can remove it in new spring boot 
public interface RoomRepository extends ReactiveMongoRepository<Room, String>{

	//Study Purpose	
	Flux<Room> findByNameContainingIgnoreCase(String name);
	
}

2. RoomService


public interface RoomService {
	
	Mono<RoomDTO> createRoom(RoomDTO roomDTO);
	Mono<RoomDTO> getRoomById(String id);
	Flux<Room> getAllRoom();
	Mono<RoomDTO> updateRoom(String id, RoomDTO roomDTO);	
	Mono<Void> deleteRoom(String id);
	
	//Study purpose only
	
	Flux<RoomDTO> searchRoomByName(String name);

}


3. RoomServiceImpl

@Override
	public Flux<RoomDTO> searchRoomByName(String name) {		
		return roomRepository.findByNameContainingIgnoreCase(name)
				.map(roomMapper::toRoomDTO);
	}


4. RoomController

@GetMapping("/search")
	public Flux<RoomDTO> findRoomByName(@RequestParam String name){
		return roomService.searchRoomByName(name);
	}

Testing : 


GET: http://localhost:8080/api/rooms/search?name=guest

==> Result : 

[
    {
        "name": "Guest house",
        "attributes": {
            "width": 3,
            "lengh": 6,
            "price": 60,
            "Have Fan": true
        }
    },
    {
        "name": "Guest One",
        "attributes": {
            "width": 6,
            "lengh": 6,
            "price": 60,
            "Have Fan": true
        }
    }
]


==================================================================

If we want to find that match the name we can change the RoomRepository

Flux<Room> findByName(String name);

Then we need to put the name that match what we have in database 


GET:  http://localhost:8080/api/rooms/search?name=Guest house

==> Result 

[
    {
        "name": "Guest house",
        "attributes": {
            "width": 3,
            "lengh": 6,
            "price": 60,
            "Have Fan": true
        }
    }
]


Error : GET : http://localhost:8080/api/rooms/search?name=Guest

==> Result 

[]






























