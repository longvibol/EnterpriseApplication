Go to Help --> find Eclipse Marketplace : "Code Coverage" 

- ជាទូរទៅយើងត្រូវមាន Unit test (ជាពិសេសត្រូវធ្វើការ តេស្ត លើ Service តែម្តង)
- យើងអាចធ្វើជា Integration teat (តេស្តដាក់ Data ចូលគ្នាតែម្តង់)
- in general for the depenancy 

	private final RoomRepository roomRepository;

	private final RoomMapper roomMapper;
	
	private final RoomCustomRepository roomCustomRepository;

គេប្រើ MOK ​it support this dependency it working no need to be care in testing 

1. Add Dependency 

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-junit-jupiter</artifactId>
		</dependency>


2. Create testing 

- Create Mock where the dependency related 
- Importance note for the Mock with the Server that we want to test we put :

@InjectMocks
private RoomServiceImpl roomService;

- There are three step we need to consider : 
// Given : parameter input to the function that make this function work 
// When : Called this method 
// Then : What we expected the result

Code :

package com.piseth.java.school.roomservice.service.impl;

import static org.mockito.Mockito.when;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;

import com.piseth.java.school.roomservice.domain.Room;
import com.piseth.java.school.roomservice.dto.RoomDTO;
import com.piseth.java.school.roomservice.mapper.RoomMapper;
import com.piseth.java.school.roomservice.repository.RoomCustomRepository;
import com.piseth.java.school.roomservice.repository.RoomRepository;

import reactor.core.publisher.Mono;
import reactor.test.StepVerifier;

@ExtendWith(MockitoExtension.class)
public class RoomServiceImplTest {
	
	@Mock
	private RoomRepository roomRepository; 

	@Mock
	private RoomMapper roomMapper;
	
	@Mock
	private RoomCustomRepository roomCustomRepository;
	
	@InjectMocks
	private RoomServiceImpl roomService;

	@Test
	void createRoom_success() {
		// Given : parameter input to the function that make this function work 
		
		RoomDTO roomDTO = new RoomDTO();
		roomDTO.setName("Luxury");
		
		Room room = new Room();
		room.setName("Luxury");
		
		// When : Called this method 
		
		when(roomRepository.save(room)).thenReturn(Mono.just(room));
		when(roomMapper.toRoom(roomDTO)).thenReturn(room);		
		when(roomMapper.toRoomDTO(room)).thenReturn(roomDTO); 
		
		
		//.map(r -> roomMapper.toRoomDTO(r));
		
		// Then : What we expected the result 
		
		StepVerifier.create(roomService.createRoom(roomDTO))
			.expectNext(roomDTO)
			.verifyComplete();
	
	}
}


---------------------------

1-Error Code Fix : 

Mockito is currently self-attaching to enable the inline-mock-maker. This will no longer work in future releases of the JDK.


2-Fix we add the dependency to disable dynamic agent loading 

<properties>
  <mockito.version>5.14.2</mockito.version> <!-- Use your actual version -->
</properties>

<build>
  <plugins>
    <plugin>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-surefire-plugin</artifactId>
      <version>3.1.2</version>
      <configuration>
        <argLine>-javaagent:${settings.localRepository}/org/mockito/mockito-core/${mockito.version}/mockito-core-${mockito.version}.jar</argLine>
      </configuration>
    </plugin>
  </plugins>
</build>




































  




































​